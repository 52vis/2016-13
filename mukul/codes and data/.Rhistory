install.packages("pltly")
install.packages("plotly")
install.packages("rplotly")
install.packages("rplotly")
Sys.setenv("ftp_proxy"="ftp://202.141.80.24:3128/")
Sys.setenv("ftp_proxy_user"="c.dilip")
Sys.setenv("ftp_proxy_password"="techtock")
install.packages("rplotly")
Sys.setenv("ftp_proxy=ftp://202.141.80.24:3128/")
?Sys.setenv
print(Sys.setenv("ftp_proxy"="ftp://202.141.80.24:3128/"))
Sys.setenv("ftp_proxy_user"="c.dilip")
Sys.setenv("ftp_proxy_password"="techtock")
install.packages("plotly")
setInternet2(T)
install.packages("rechonest")
library(ggplot2)
install.packages(c("ggplot2","ggthemes","readxl","dplyr","grid"))
library(ggplot2)
#library(ggalt)
library(ggthemes)
library(readxl)
library(dplyr)
library(grid)
#################VISUALISE DATA###########################
drones=read.csv("new_drones_data.csv",header=T)
drones$class="MISSING_DATA"
drones$department=as.character(drones$department)
drones$class[drones$department=="LEO NOT NOTIFIED"] ="NOT_NOTIFIED"
drones$class[drones$department=="UNKN IF LEOS NOTIFIED"] ="UNKNOWN"
drones$class[!(drones$department=="LEO NOT NOTIFIED"
| drones$department=="UNKN IF LEOS NOTIFIED"
| is.na(drones$department)) ]="NOTIFIED"
drones$class=as.factor(drones$class)
setwd("/home/mukul/Desktop/Mukul Backup/github repos stuff/52 vis/2016-13/")
#################VISUALISE DATA###########################
drones=read.csv("new_drones_data.csv",header=T)
drones$class="MISSING_DATA"
drones$department=as.character(drones$department)
drones$class[drones$department=="LEO NOT NOTIFIED"] ="NOT_NOTIFIED"
drones$class[drones$department=="UNKN IF LEOS NOTIFIED"] ="UNKNOWN"
drones$class[!(drones$department=="LEO NOT NOTIFIED"
| drones$department=="UNKN IF LEOS NOTIFIED"
| is.na(drones$department)) ]="NOTIFIED"
drones$class=as.factor(drones$class)
setwd("/home/mukul/Desktop/Mukul Backup/github repos stuff/52 vis/2016-13/vis/codes and data/")
#################VISUALISE DATA###########################
drones=read.csv("new_drones_data.csv",header=T)
drones$class="MISSING_DATA"
drones$department=as.character(drones$department)
drones$class[drones$department=="LEO NOT NOTIFIED"] ="NOT_NOTIFIED"
drones$class[drones$department=="UNKN IF LEOS NOTIFIED"] ="UNKNOWN"
drones$class[!(drones$department=="LEO NOT NOTIFIED"
| drones$department=="UNKN IF LEOS NOTIFIED"
| is.na(drones$department)) ]="NOTIFIED"
drones$class=as.factor(drones$class)
drones2=drones[drones$class!="MISSING_DATA",]
str(drones)
ggplot(data = drones2[(nrow(xl2)+1):nrow(drones2),]) +
geom_bar(mapping = aes(x = class,fill=class)) +ggtitle("UAS_Sightings_report_21Aug-31Jan")
xl1 <- read_excel("UAS_Sightings_report_21Aug-31Jan.xlsx")
xl2 <- read_excel("UASEventsNov2014-Aug2015.xls")
xl1 <- read_excel("UAS_Sightings_report_21Aug-31Jan.xlsx")
xl2 <- read_excel("UASEventsNov2014-Aug2015.xls")
ggplot(data = drones2[1:nrow(xl2),]) +
geom_bar(mapping = aes(x = class,fill=class)) +ggtitle("UASEventsNov2014-Aug2015")
ggplot(data=drones2[drones2$yw>=201500 & drones2$yw<=201570,]) +
geom_bar(mapping=aes(x=yw,fill=class))+ggtitle("Weekly classification in year 2015")
ggplot(data=drones2[drones2$yw>=201500 & drones2$yw<=201570,]) +
geom_bar(mapping=aes(x=yw,fill=class))+ggtitle("Weekly classification in year 2015")+geom_norm()
ggplot(data=drones2[drones2$yw>=201500 & drones2$yw<=201570,]) +
geom_bar(mapping=aes(x=yw,fill=class))+ggtitle("Weekly classification in year 2015")+stat_smooth()
ggplot(data=drones2[drones2$yw>=201500 & drones2$yw<=201570,]) +
geom_bar(mapping=aes(x=yw,fill=class))+ggtitle("Weekly classification in year 2015")+stat_smooth(mapping=aes(x=yw))
ggplot(data=drones2[drones2$yw>=201500 & drones2$yw<=201570,]) +
geom_bar(mapping=aes(x=yw,fill=class))+ggtitle("Weekly classification in year 2015")+stat_smooth(mapping=aes(yw))
ggplot(data=drones2[drones2$yw>=201500 & drones2$yw<=201570,]) +
geom_bar(mapping=aes(x=yw,fill=class))+ggtitle("Weekly classification in year 2015")+stat_smooth(mapping=aes(x=yw,y=count))
by_state <- drones2 %>%
group_by(state) %>%
summarize(count = n()) %>%
mutate(region = tolower(state))
head(by_state)
missing_states <- data_frame(
region = c("wyoming", "vermont", "nebraska", "iowa")
)
by_state <- bind_rows(by_state, missing_states)
us <- map_data("state")
mid <- mean(by_state$count, na.rm = TRUE)
install.packages(gganimate)
install.packages(ggmap)
install.packages("ggmap")
library(ggmap)
missing_states <- data_frame(
region = c("wyoming", "vermont", "nebraska", "iowa")
)
by_state <- bind_rows(by_state, missing_states)
us <- map_data("state")
mid <- mean(by_state$count, na.rm = TRUE)
mid
by_state
as.data.frame(by_state)
devtools::install_github("dgrtwo/gganimate")
install.packages("devtools")
devtools::install_github("dgrtwo/gganimate")
library(httr)
library(RCurl)
opts <- list(
proxy         = "202.141.80.24",
proxyusername = "c.dilip",
proxypassword = "techtock",
proxyport     = 3128
)
options(RCurlOptions = opts)
set_config(
use_proxy(url="202.141.80.24", port=3128, username="c.dilip",password="techtock")
)
devtools::install_github("dgrtwo/gganimate")
library(gganimate)
us <- map_data("state")
us
ggplot() +
geom_map(aes(x = long, y = lat, map_id = region), data = us,
map = us, fill = "#ffffff", color = "#ffffff", size = 0.15) +
geom_map(aes(fill = count, map_id = region),
map = us, data = by_state,
color = "#ffffff", size = 0.15)
by$state
by_state
str(drones2)
by_group(drones2$state)
levels(drones2$state)
count(drones2$state)
by_state <- drones2[drones2$class=="NOTIFIED"] %>%
group_by(state) %>%
summarize(count = n())
by_state <- drones2[drones2$class=="NOTIFIED",] %>%
group_by(state) %>%
summarize(count = n())
by_state
by_state$state
by_state$state==drones2$class
by_state$state==drones2$state
by_state$state
by_state$state
by_state
by_state <- drones2[drones2$class=="NOTIFIED",] %>%
group_by(state) %>%
summarize(count = n()) %>%  mutate(region = tolower(state))
missing_states <- data_frame(
region = c("wyoming", "vermont", "nebraska", "iowa")
)
by_state
ggplot() +
geom_map(aes(x = long, y = lat, map_id = region), data = us,
map = us, fill = "#ffffff", color = "#ffffff", size = 0.15) +
geom_map(aes(fill = count, map_id = region),
map = us, data = by_state,
color = "#ffffff", size = 0.15)
by_state <- bind_rows(by_state, missing_states)
us <- map_data("state")
mid <- mean(by_state$count, na.rm = TRUE)
ggplot() +
geom_map(aes(x = long, y = lat, map_id = region), data = us,
map = us, fill = "#ffffff", color = "#ffffff", size = 0.15) +
geom_map(aes(fill = count, map_id = region),
map = us, data = by_state,
color = "#ffffff", size = 0.15)
by_state
by_state$state
levels(drones2$state)
by_state <- drones2[drones2$class=="NOTIFIED",] %>%
group_by(state) %>%
summarize(count = n()) %>%  mutate(region = tolower(state))
missing_states <- data_frame(
region = c("wyoming", "vermont", "nebraska", "iowa","idaho","north dakota")
)
by_state <- bind_rows(by_state, missing_states)
us <- map_data("state")
mid <- mean(by_state$count, na.rm = TRUE)
ggplot() +
geom_map(aes(x = long, y = lat, map_id = region), data = us,
map = us, fill = "#ffffff", color = "#ffffff", size = 0.15) +
geom_map(aes(fill = count, map_id = region),
map = us, data = by_state,
color = "#ffffff", size = 0.15)
by_state <- drones2[drones2$class=="NOTIFIED",] %>%
group_by(state) %>%
summarize(count = n()) %>%  mutate(region = tolower(state))
missing_states <- data_frame(
region = c("wyoming", "vermont", "nebraska", "iowa","idaho","north dakota","south dakota")
)
by_state <- bind_rows(by_state, missing_states)
us <- map_data("state")
mid <- mean(by_state$count, na.rm = TRUE)
missing_states <- data_frame(
region = c("wyoming", "vermont", "nebraska", "iowa","idaho","north dakota","south dakota"),
count=c(0,0,0,0,0,0,0)
)
by_state <- drones2[drones2$class=="NOTIFIED",] %>%
group_by(state) %>%
summarize(count = n()) %>%  mutate(region = tolower(state))
missing_states <- data_frame(
region = c("wyoming", "vermont", "nebraska", "iowa","idaho","north dakota","south dakota"),
count=c(0,0,0,0,0,0,0)
)
by_state <- bind_rows(by_state, missing_states)
us <- map_data("state")
mid <- mean(by_state$count, na.rm = TRUE)
ggplot() +
geom_map(aes(x = long, y = lat, map_id = region), data = us,
map = us, fill = "#ffffff", color = "#ffffff", size = 0.15) +
geom_map(aes(fill = count, map_id = region),
map = us, data = by_state,
color = "#ffffff", size = 0.15)
as.data.frame(by_state)
ggplot() +
geom_map(aes(x = long, y = lat, map_id = region), data = us,
map = us, fill = "#ffffff", color = "#ffffff", size = 0.15)
mid <- mean(by_state$count, na.rm = TRUE)
ggplot() +
geom_map(aes(x = long, y = lat, map_id = region), data = us,
map = us, fill = "#ffffff", color = "#ffffff", size = 0.15) +
geom_map(aes(fill = count, map_id = region),
map = us, data = by_state,
color = "#ffffff", size = 0.15)
ggplot() +
geom_map(aes(x = long, y = lat, map_id = region), data = us,
map = us, size = 0.15)
ggplot() +
geom_map(aes(x = long, y = lat, map_id = region), data = us,
map = us, fill = "#ffffff",  size = 0.15)
ggplot() +
geom_map(aes(x = long, y = lat, map_id = region), data = us,
map = us,  color = "#ffffff", size = 0.15)
ggplot() +
geom_map(aes(x = long, y = lat, map_id = region), data = us,
map = us,  color = "#ffabc", size = 0.15)
ggplot() +
geom_map(aes(x = long, y = lat, map_id = region), data = us,
map = us,  color = "#ffffff", size = 0.15)
drones2$region=tolower(drones2$state)
str(drones2)
d=geocode(as.character(drones2$city))
d
dd
d
d=geocode(as.character(drones2$city))
as.character(drones2$city)
d=geocode(as.character(drones2$city[1:250]))
d
write.csv(d,"geocode1.csv",row.names = F)
d=geocode(as.character(drones2$city[250:500]))
d=geocode(as.character(drones2$city[251:500]))
d=NULL
for(i in 1:5)
{
d=tryCatch(
{
rbind(d,geocode(geocode(as.character(drones2$city[i]))))
},
error=function(cond)
{
rbind(d,NA)
}
)
}
d
d=NULL
for(i in 1:5)
{
d=tryCatch(
{
rbind(d,geocode(geocode(as.character(drones2$city[i]))))
},
error=function(cond)
{
rbind(d,NA)
}
)
}
d
d=NULL
for(i in 1:5)
{
d=tryCatch(
{
rbind(d,geocode(as.character(drones2$city[i])))
},
error=function(cond)
{
rbind(d,NA)
}
)
}
d
d=NULL
for(i in 1:nrow(drones2))
{
d=tryCatch(
{
rbind(d,geocode(as.character(drones2$city[i])))
},
error=function(cond)
{
rbind(d,c(NA,NA))
}
)
}
d
nrow(drones)
nrow(drones2)
summary(d)
write.csv(d,"geocodes.csv")
write.csv(d,"geocodes.csv",row.names = F)
drones2$region=tolower(drones2$state)
d1=read.csv("geocodes.csv")
drones2=cbind(drones2,d1)
str(drones2)
ggplot() +
geom_map(aes(x = long, y = lat, map_id = region), data = us,
map = us,  color = "#ffffff", size = 0.15) +
geom_map(mapping = aes(x=long,y=lat),data=drones2)
ggplot() +
geom_map(aes(x = long, y = lat, map_id = region), data = us,
map = us,  color = "#ffffff")
ggplot() +
geom_map(aes(x = long, y = lat, map_id = region), data = us,
map = us,  color = "#ffffff") +
geom_map(mapping = aes(x=lon,y=lat),data=drones2)
drones2=as.data.frame(drones2)
ggplot() +
geom_map(aes(x = long, y = lat, map_id = region), data = us,
map = us,  color = "#ffffff") +
geom_map(mapping = aes(x=lon,y=lat),data=drones2)
ggplot() +
geom_map(aes(x = long, y = lat, map_id = region), data = us,
map = us,  color = "#ffffff") +
geom_point(mapping = aes(x=lon,y=lat),data=drones2)
ggplot() +
geom_map(aes(x = long, y = lat, map_id = region), data = us,
map = us,  color = "#ffffff") +
geom_point(mapping = aes(x=lon,y=lat),data=drones2)) +
coord_map("albers", lat0 = 39, lat1 = 45)
ggplot() +
geom_map(aes(x = long, y = lat, map_id = region), data = us,
map = us,  color = "#ffffff") +
geom_point(mapping = aes(x=lon,y=lat),data=drones2) +
coord_map("albers", lat0 = 39, lat1 = 45)
ggplot() +
geom_map(aes(x = long, y = lat, map_id = region), data = us,
map = us,  color = "#ffffff") +
ggplot() +
geom_map(aes(x = long, y = lat, map_id = region), data = us,
map = us,  color = "#ffffff")
ggplot() +
geom_map(aes(x = long, y = lat, map_id = region), data = us,
map = us,  color = "#ffffff")
drones2$lon[1:10]
ggplot() +
geom_map(aes(x = long, y = lat, map_id = region), data = us,
map = us,  color = "#ffffff") +
geom_point(mapping = aes(x=lon,y=lat),data=drones2)+
scale_x_continuous(limits = c(-70, -120), expand = c(0, 0)) +
scale_y_continuous(limits = c(30,80), expand = c(0, 0))
ggplot() +
geom_map(aes(x = long, y = lat, map_id = region), data = us,
map = us,  color = "#ffffff") +
geom_point(mapping = aes(x=lon,y=lat),data=drones2)+
scale_x_continuous(limits = c(-70, -102), expand = c(0, 0)) +
scale_y_continuous(limits = c(30,80), expand = c(0, 0))
ggplot() +
geom_map(aes(x = long, y = lat, map_id = region), data = us,
map = us,  color = "#ffffff") +
geom_point(mapping = aes(x=lon,y=lat),data=drones2)+
scale_x_continuous(limits = c(-60, -102), expand = c(0, 0)) +
scale_y_continuous(limits = c(30,50), expand = c(0, 0))
ggplot() +
geom_map(aes(x = long, y = lat, map_id = region), data = us,
map = us,  color = "#ffffff") +
geom_point(mapping = aes(x=lon,y=lat),data=drones2)+
scale_x_continuous(limits = c(-60, -130), expand = c(0, 0)) +
scale_y_continuous(limits = c(30,50), expand = c(0, 0))
ggplot() +
geom_map(aes(x = long, y = lat, map_id = region), data = us,
map = us,  color = "#ffffff")
ggplot() +
geom_map(aes(x = long, y = lat, map_id = region), data = us,
map = us,  color = "#ffffff") +
geom_point(mapping = aes(x=lon,y=lat),data=drones2)+
scale_x_continuous(limits = c(-60, -130), expand = c(0, 0)) +
scale_y_continuous(limits = c(30,50), expand = c(0, 0))
ggplot() +
geom_map(aes(x = long, y = lat, map_id = region), data = us,
map = us,  color = "#ffffff") +
geom_point(mapping = aes(x=lon,y=lat),data=drones2)+
scale_x_continuous(limits = c(-60, -130), expand = c(0, 0))
ggplot() +
geom_map(aes(x = long, y = lat, map_id = region), data = us,
map = us,  color = "#ffffff") +
geom_point(mapping = aes(x=lon,y=lat),data=drones2)
us
str(us)
min(us$long)
max(us$long)
max(us$lat)
max(us$lat)
min(us$lat)
ggplot() +
geom_map(aes(x = long, y = lat, map_id = region), data = us,
map = us,  color = "#ffffff") +
geom_point(mapping = aes(x=lon,y=lat),data=drones2)+
scale_x_continuous(limits = c(-67, -124), expand = c(0, 0)) +
scale_y_continuous(limits = c(24,49), expand = c(0, 0))
ggplot() +
geom_map(aes(x = long, y = lat, map_id = region), data = us,
map = us,  color = "#ffffff") +
geom_point(mapping = aes(x=lon,y=lat),data=drones2)+
scale_x_continuous(limits = c(-67, -124), expand = c(0, 0)) +
scale_y_continuous(limits = c(24,54), expand = c(0, 0))
ggplot() +
geom_map(aes(x = long, y = lat, map_id = region), data = us,
map = us,  color = "#ffffff") +
geom_point(mapping = aes(x=lon,y=lat),data=drones2)+
scale_y_continuous(limits = c(-67, -124), expand = c(0, 0)) +
scale_x_continuous(limits = c(24,54), expand = c(0, 0))
str(drones2)
ggplot() +
geom_map(aes(x = long, y = lat, map_id = region), data = us,
map = us,  color = "#ffffff") +
geom_point(mapping = aes(x=lon,y=lat),data=subset(drones2,lon>= min(us$long) & lon<=max(us$long) &
lat>= min(us$lat) & lat<=max(us$lat)  ))
ggplot() +
geom_map(aes(x = long, y = lat, map_id = region), data = us,
map = us,  color = "#ffffff") +
geom_point(mapping = aes(x=lon,y=lat,color=class),data=subset(drones2,lon>= min(us$long) & lon<=max(us$long) &
lat>= min(us$lat) & lat<=max(us$lat)  ))
ggplot() +
geom_map(aes(x = long, y = lat, map_id = region), data = us,
map = us) +
geom_point(mapping = aes(x=lon,y=lat,color=class),data=subset(drones2,lon>= min(us$long) & lon<=max(us$long) &
lat>= min(us$lat) & lat<=max(us$lat)  ))
ggplot() +
geom_map(aes(x = long, y = lat, map_id = region), data = us,
map = us,  color = "white") +
geom_point(mapping = aes(x=lon,y=lat,color=class),data=subset(drones2,lon>= min(us$long) & lon<=max(us$long) &
lat>= min(us$lat) & lat<=max(us$lat)  ))
ggplot() +
geom_map(aes(x = long, y = lat, map_id = region), data = us,
map = us,fill="white") +
geom_point(mapping = aes(x=lon,y=lat,color=class),data=subset(drones2,lon>= min(us$long) & lon<=max(us$long) &
lat>= min(us$lat) & lat<=max(us$lat)  ))
ggplot() +
geom_map(aes(x = long, y = lat, map_id = region), data = us,
map = us,fill="white",color="black") +
geom_point(mapping = aes(x=lon,y=lat,color=class),data=subset(drones2,lon>= min(us$long) & lon<=max(us$long) &
lat>= min(us$lat) & lat<=max(us$lat)  ))
ggplot() +
geom_map(aes(x = long, y = lat, map_id = region), data = us,
map = us,fill="white",color="black") +
geom_point(mapping = aes(x=lon,y=lat,color=class),data=subset(drones2,lon>= min(us$long) & lon<=max(us$long) &
lat>= min(us$lat) & lat<=max(us$lat)  ))+
theme_classic()
ggplot() +
geom_map(aes(x = long, y = lat, map_id = region), data = us,
map = us,fill="white",color="black") +
geom_point(mapping = aes(x=lon,y=lat,color=class),data=subset(drones2,lon>= min(us$long) & lon<=max(us$long) &
lat>= min(us$lat) & lat<=max(us$lat)  ))+
coord_map+theme_classic()
library(gganimate)
ggplot() +
geom_map(aes(x = long, y = lat, map_id = region), data = us,
map = us,fill="white",color="black") +
geom_point(mapping = aes(x=lon,y=lat,color=class,frame=yw),data=subset(drones2,lon>= min(us$long) & lon<=max(us$long) &
lat>= min(us$lat) & lat<=max(us$lat)  ))+
theme_classic()
ani.options(interval = 0.25, ani.width = 800, ani.height = 800)
library(gganimate)
ani.options(interval = 0.25, ani.width = 800, ani.height = 800)
install.packages("animation")
library(animation)
ani.options(interval = 0.25, ani.width = 800, ani.height = 800)
gg_animate(p, "map.mp4")
p=ggplot() +
geom_map(aes(x = long, y = lat, map_id = region), data = us,
map = us,fill="white",color="black") +
geom_point(mapping = aes(x=lon,y=lat,color=class,frame=yw),data=subset(drones2,lon>= min(us$long) & lon<=max(us$long) &
lat>= min(us$lat) & lat<=max(us$lat)  ))+
theme_classic()
gg_animate(p, "map.mp4")
gg_animate(p)
devtools::install_github("dgrtwo/gganimate")
gg_animate(p)
gg_animate(p)
ggplot() +
geom_map(aes(x = long, y = lat, map_id = region), data = us,
map = us,fill="white",color="black",size=5)
ggplot() +
geom_map(aes(x = long, y = lat, map_id = region), data = us,
map = us,fill="white",color="black") +
geom_point(mapping = aes(x=lon,y=lat,color=class,frame=yw),data=subset(drones2,lon>= min(us$long) & lon<=max(us$long) &
lat>= min(us$lat) & lat<=max(us$lat)  ),size=5)
gg_animate(p,"output.gif")
gg_animate(p,"output.html")
ani.options(interval = 0.5, ani.width = 800, ani.height = 800)
p=ggplot() +
geom_map(aes(x = long, y = lat, map_id = region), data = us,
map = us,fill="white",color="black") +
geom_point(mapping = aes(x=lon,y=lat,color=class,frame=yw),data=subset(drones2,lon>= min(us$long) & lon<=max(us$long) &
lat>= min(us$lat) & lat<=max(us$lat)  ),size=5)+
theme_classic()
gg_animate(p,"output.gif")
